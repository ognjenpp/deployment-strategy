name: Docker Scout Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  docker-scout-analysis:
    runs-on: ubuntu-latest
    permissions:
      # required for all workflows
      security-events: write
      # only required for workflows in private repositories
      actions: read
      contents: read
    steps:
      # Step 1: Checkout your repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 3: Build your Docker image locally
      - name: Build Docker Image
        run: |
          docker pull nginx:latest

      # Step 4: Use Docker Scout to analyze the locally built image
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: 'nginx:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy SARIF Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

      # - uses: anchore/scan-action@v3
      #   id: scan
      #   with:
      #     image: "nginx:latest"
      #     fail-build: false
      #     output-format: sarif
      # - name: upload Anchore scan SARIF report
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: ${{ steps.scan.outputs.sarif }}
      # - name: Create SBOM
      #   uses: anchore/sbom-action@v0
      #   with:
      #     format: spdx-json
      #     output-file: "${{ github.event.repository.name }}-sbom.spdx.json"

      # - name: Scan SBOM
      #   id: scan
      #   uses: anchore/scan-action@v3
      #   with:
      #     fail-build: false
      #     sbom: "${{ github.event.repository.name }}-sbom.spdx.json"
      
      # - name: upload Anchore scan SARIF report
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: ${{ steps.scan.outputs.sarif }}

      # - name: Docker Scout Quickview and CVEs
      #   uses: docker/scout-action@v1
      #   with:
      #     command: cves
      #     image: nginx:latest